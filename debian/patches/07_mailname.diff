Description: Use /etc/mailname for mail name
 Taken from upstream; should appear in the 5.4 release.
 .
 Extracted from upstream's portable branch with
 git diff bf1ef84a~1..bf1ef84a smtpd/smtpd.conf.5 > 07_mailname.diff
 git diff b183c931..29d05522 smtpd/parse.y >> 07_mailname.diff
 git diff 8558f0a29~1..8558f0a29 >> 07_mailname.diff
 followed by a bit of manual massaging, due to some extracted diffs undoing
 changes from previous commits.
Origin: upstream
Applied-Upstream: b183c931..29d0552
Applied-Upstream: https://github.com/poolpOrg/OpenSMTPD/commit/8558f0a29
Applied-Upstream: https://github.com/poolpOrg/OpenSMTPD/commit/bf1ef84a5
                  for the manpage
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
Index: opensmtpd/smtpd/smtpd.conf.5
===================================================================
--- opensmtpd.orig/smtpd/smtpd.conf.5	2013-08-14 09:08:47.457937259 -0400
+++ opensmtpd/smtpd/smtpd.conf.5	2013-08-14 09:08:47.453937144 -0400
@@ -214,15 +214,11 @@
 .It Ic for local Op Ic alias Aq Ar aliases
 This rule applies to mail destined to
 .Dq localhost
-and to the server's fully qualified domain name,
-as returned by
-.Xr hostname 1 .
+and to the default server name (see below).
 .It Ic for local virtual Aq Ar vmap
 This rule applies to mail destined to
 .Dq localhost
-and to the server's fully qualified domain name,
-as returned by
-.Xr hostname 1 .
+and to the default server name (see below).
 The
 .Ar vmap
 table will be used as the virtual domain mapping.
@@ -287,7 +283,7 @@
 .Ar mx .
 If
 .Ar mx
-is not specified, local hostname will be assumed.
+is not specified, default server name (see below) will be assumed.
 .Pp
 If the
 .Ic as
@@ -312,9 +308,9 @@
 If the table contains more than one address, they are picked in turn each
 time a new connection is opened.
 .Pp
-By default,
+By default, when connecting to a remote server,
 .Xr smtpd 8
-advertises its local hostname when connecting to a remote server.
+advertises its default server name (see below).
 A
 .Ic helo
 parameter may be specified to advertise an alternate hostname.
@@ -405,6 +401,11 @@
 when connecting to the relay.
 If the table contains more than one address, they are picked in turn each
 time a new connection is opened.
+.Pp
+By default, when connecting to a remote server,
+.Xr smtpd 8
+advertises its default server name (see below).
+A
 .Ic helo
 parameter may be specified to advertise an alternate hostname.
 Table
@@ -524,7 +525,8 @@
 .Pp
 If the
 .Ic hostname
-parameter is used, then it will be used in the greeting banner.
+parameter is used, then it will be used in the greeting banner
+instead of the default server name (see below).
 .It Ic max-message-size Ar n
 Specify a maximum message size of
 .Ar n
@@ -595,12 +597,28 @@
 .Ar key Ns = Ns Ar value
 descriptions.
 .El
+.Sh DEFAULT SERVER NAME
+The default server name is the hostname that
+.Xr smtpd 8
+operates as, which is used at various places.
+It is determined at startup as follows.
+.Pp
+If a
+.Pa /etc/mailname
+file exists, then the first line is read and used as the server name.
+Otherwise, the server name is derived from the local hostname returned by
+.Xr gethostname 3 ,
+either directly if it is a fully-qualified domain name,
+or by retreiving the associated canonical name through
+.Xr getaddrinfo 3 .
 .Sh FILES
 .Bl -tag -width "/etc/mail/smtpd.confXXX" -compact
 .It Pa /etc/mail/smtpd.conf
 Default
 .Xr smtpd 8
 configuration file.
+.It Pa /etc/mailname
+Alternate server name to use.
 .It Pa /var/spool/smtpd/
 Spool directories for mail during processing.
 .El
Index: opensmtpd/smtpd/parse.y
===================================================================
--- opensmtpd.orig/smtpd/parse.y	2013-08-14 09:08:47.457937259 -0400
+++ opensmtpd/smtpd/parse.y	2013-08-14 09:08:47.453937144 -0400
@@ -1336,8 +1336,7 @@
 	struct table   *t;
 	char		hostname[SMTPD_MAXHOSTNAMELEN];
 
-	if (gethostname(hostname, sizeof hostname) == -1) {
-		fprintf(stderr, "invalid hostname: gethostname() failed\n");
+	if (! getmailname(hostname, sizeof hostname)) {
 		return (-1);
 	}
 
@@ -1429,12 +1428,7 @@
 	}
 
 	if (strlen(conf->sc_hostname) == 0)
-		if (gethostname(conf->sc_hostname,
-		    sizeof(conf->sc_hostname)) == -1) {
-			log_warn("warn: could not determine host name");
-			bzero(conf->sc_hostname, sizeof(conf->sc_hostname));
-			errors++;
-		}
+		strlcpy(conf->sc_hostname, hostname, sizeof conf->sc_hostname);
 
 	if (errors) {
 		purge_config(PURGE_EVERYTHING);
Index: opensmtpd/smtpd/enqueue.c
===================================================================
--- opensmtpd.orig/smtpd/enqueue.c	2013-08-14 09:08:47.457937259 -0400
+++ opensmtpd/smtpd/enqueue.c	2013-08-14 09:08:47.453937144 -0400
@@ -220,8 +220,8 @@
 	argc -= optind;
 	argv += optind;
 
-	if (gethostname(host, sizeof(host)) == -1)
-		err(1, "gethostname");
+	if (getmailname(host, sizeof(host)) == -1)
+		err(1, "getmailname");
 	if ((pw = getpwuid(getuid())) == NULL)
 		user = "anonymous";
 	if (pw != NULL)
Index: opensmtpd/smtpd/smtpd.h
===================================================================
--- opensmtpd.orig/smtpd/smtpd.h	2013-08-14 09:08:47.457937259 -0400
+++ opensmtpd/smtpd/smtpd.h	2013-08-14 09:08:47.457937259 -0400
@@ -1409,6 +1409,7 @@
 void session_socket_blockmode(int, enum blockmodes);
 void session_socket_no_linger(int);
 int session_socket_error(int);
+int getmailname(char *, size_t);
 
 
 /* waitq.c */
Index: opensmtpd/smtpd/util.c
===================================================================
--- opensmtpd.orig/smtpd/util.c	2013-08-14 09:08:47.457937259 -0400
+++ opensmtpd/smtpd/util.c	2013-08-14 09:08:47.457937259 -0400
@@ -736,3 +736,72 @@
 
 	return NULL;
 }
+
+int
+getmailname(char *hostname, size_t len)
+{
+        struct addrinfo hints, *res = NULL;
+        FILE   *fp;
+        char   *buf, *lbuf = NULL;
+        size_t  buflen;
+        int     error;
+        int     ret = 0;
+
+        /* First, check if we have "/etc/mail/mailname" */
+        if ((fp = fopen("/etc/mail/mailname", "r")) == NULL)
+                goto nomailname;
+
+        if ((buf = fgetln(fp, &buflen)) == NULL)
+                goto end;
+
+        if (buf[buflen-1] == '\n')
+                buf[buflen - 1] = '\0';
+        else {
+                if ((lbuf = calloc(buflen + 1, 1)) == NULL)
+                        err(1, "calloc");
+                memcpy(lbuf, buf, buflen);
+        }
+
+        if (strlcpy(hostname, buf, len) >= len)
+                fprintf(stderr, "/etc/mail/mailname entry too long");
+        else {
+                ret = 1;
+                goto end;
+        }
+
+
+nomailname:
+        if (gethostname(hostname, len) == -1) {
+                fprintf(stderr, "invalid hostname: gethostname() failed\n");
+                goto end;
+        }
+
+        if (strchr(hostname, '.') == NULL) {
+                memset(&hints, 0, sizeof hints);
+                hints.ai_family = PF_UNSPEC;
+                hints.ai_socktype = SOCK_STREAM;
+                hints.ai_protocol = IPPROTO_TCP;
+                hints.ai_flags = AI_CANONNAME;
+                error = getaddrinfo(hostname, NULL, &hints, &res);
+                if (error) {
+                        fprintf(stderr, "invalid hostname: getaddrinfo() failed: %s\n",
+                            gai_strerror(error));
+                        goto end;
+                }
+
+                if (strlcpy(hostname, res->ai_canonname, len) >= len) {
+                        fprintf(stderr, "hostname too long");
+                        goto end;
+                }
+        }
+
+        ret = 1;
+
+end:
+        free(lbuf);
+        if (res)
+                freeaddrinfo(res);
+        if (fp)
+                fclose(fp);
+        return ret;
+}
